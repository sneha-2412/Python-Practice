#instance method
class Cart:
   def __init__(self):
       self.items = {}
   def add_item(self, item_name,quantity):
      self.items[item_name] = quantity
   def display_items(self):
      print(self.items)
a = Cart()
a.add_item("book", 3)

#class method
class Cart:
  flat_discount = 0
  min_bill = 100
  @classmethod
  def update_flat_discount(cls, new_flat_discount):
      cls.flat_discount = new_flat_discount
  @classmethod
  def increase_flat_discount(cls, amount):
      new_flat_discount = cls.flat_discount + amount
      cls.update_flat_discount(new_flat_discount)
Cart.increase_flat_discount(50)
print(Cart.flat_discount)

#static method
class Cart:
   @staticmethod
   def greet():
       print("Have a Great Shopping")
Cart.greet()

#Inheritance example
class Product:
   def __init__(self, name, price, deal_price, ratings):
       self.name = name
       self.price = price
       self.deal_price = deal_price
       self.ratings = ratings
       self.you_save = price - deal_price
   def display_product_details(self):
       print("Product: {}".format(self.name))
       print("Price: {}".format(self.price))
       print("Deal Price: {}".format(self.deal_price))
       print("You Saved: {}".format(self.you_save))
       print("Ratings: {}".format(self.ratings))

class ElectronicItem(Product):
   def set_warranty(self, warranty_in_months):
       self.warranty_in_months = warranty_in_months
   def get_warranty(self):
       return self.warranty_in_months

e = ElectronicItem("TV",45000, 40000, 3.5)
e.set_warranty(24)
print(e.get_warranty())
